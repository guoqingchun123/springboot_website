<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace = "com.bestvike.website.dao.ViewRegionInfoDao">
	<select id = "selectAllRegions" parameterType = "Map" resultType = "ViewRegionInfo">
		<![CDATA[
           SELECT t1.region_id, t1.x, t1.y, region_name, address, pre_sale_date,
           t1.division_code, t2.division_name, round(proj.avg_price, 2) avg_price, t1.logo_path
           FROM view_regionInfo t1 LEFT JOIN view_divisionInfo t2 on t1.division_code = t2.division_code
           LEFT JOIN (select arb.region_id, sum(case when vhi.house_use like '住宅' then vhi.presell_amount else 0 end)
					/ sum(case when vhi.house_use like '住宅' then vhi.construct_area else 0.00001 end) as avg_price
				from view_houseinfo vhi
				left join ass_regbld arb on vhi.project_id = arb.project_id and vhi.bld_no = arb.bld_no
				group by arb.region_id) proj
           ON t1.region_id = proj.region_id
           ORDER BY t1.pre_sale_date desc
        ]]>
	</select>

	<select id = "selectRegionByParameter" parameterType = "String" resultType = "com.bestvike.website.entity.Region">
		<![CDATA[
           SELECT t1.region_id, t1.x, t1.y, region_name, address, pre_sale_date, t1.division_code, t2.division_name, round(proj.avg_price, 2) avg_price, t1.logo_path
           FROM view_regionInfo t1 LEFT JOIN view_divisionInfo t2 on t1.division_code = t2.division_code
           LEFT JOIN (
        		select arb.region_id, sum(case when vhi.house_use like '住宅' then vhi.presell_amount else 0 end)
					/ sum(case when vhi.house_use like '住宅' then vhi.construct_area else 0.00001 end) as avg_price
				from view_houseinfo vhi
				left join ass_regbld arb on vhi.project_id = arb.project_id and vhi.bld_no = arb.bld_no
				group by arb.region_id
           ) proj
           ON t1.region_id = proj.region_id
        ]]>
		<where>
			<if test = "keywords != null">
				t1.region_name like #{keywords} or t1.address like #{keywords}
			</if>
			<if test = "divisionCode != null">
				AND t2.division_code = #{divisionCode}
			</if>
			<if test = "price != null">
				AND proj.avg_price ${price}
			</if>
			<if test = "houseHold != null">
				AND t1.house_holds like #{houseHold}
			</if>
		</where>
		<choose>
			<when test = "sort != null">
				order by ${sort}
			</when>
			<otherwise>
				order by pre_sale_date desc
			</otherwise>
		</choose>
	</select>

	<select id = "selectRegion" parameterType = "String" resultType = "ViewRegionInfo">
		<![CDATA[
			SELECT * FROM view_regioninfo t1
			LEFT JOIN (SELECT #{regionId} region_id, wm_concat(DISTINCT sale_phone) sale_phone, min(vpi.greening_rate) greening_rate
			from view_projectinfo vpi where exists(select 1 from ass_regbld where region_id = #{regionId} and project_id = vpi.project_id)) t2
			on t1.region_id = t2.region_id
			left join (select #{regionId} region_id, COUNT(1) house_num, wm_concat(distinct case when vhi.house_use like '%住宅%' then vhi.house_hold else '' end) houseHold,
				min(case when vhi.house_use not like '%住宅%' then 9999 else vhi.construct_area end)
				|| '-' || max(case when vhi.house_use like '%住宅%' then vhi.construct_area else 0 end) area_range
			from view_houseinfo vhi
			WHERE EXISTS(select 1 from ass_regbld WHERE region_id = #{regionId} AND project_id = vhi.project_id AND bld_no = vhi.bld_no)) t3
			on t1.region_id = t3.region_id
			WHERE t1.region_id = #{regionId}
		]]>
	</select>

	<select id = "selectRegionSalesData" parameterType = "String" resultType = "map">
		<!--以面积统计数据-->
		<![CDATA[
			SELECT
				SUM(CASE WHEN sales_flag = '否' and nosale_Reason = '非卖' then t.construct_area else 0 END) 非卖,
				SUM(CASE WHEN sales_flag = '否' and nosale_Reason = '自留' then t.construct_area else 0 END) 自留,
				SUM(CASE WHEN mortgage_flag = '是' THEN t.construct_area ELSE 0 END) 抵押,
				SUM(CASE WHEN close_flag = '是' THEN t.construct_area ELSE 0 END) 查封,
	            SUM(CASE WHEN frozen_flag = '是' THEN t.construct_area ELSE 0 END) 冻结,
	            SUM(CASE WHEN presell_state = '已售' THEN t.construct_area ELSE 0 END) 已售,
	            SUM(CASE WHEN presell_state = '未售' AND sales_flag != '否' THEN t.construct_area ELSE 0 END) 未售
            FROM view_houseinfo t
             WHERE t.project_id in (select a.project_id from ASS_REGBLD a where a.region_id = #{regionId})
		]]>
	</select>

	<select id = "selectRegionHouseHoldData" parameterType = "map" resultType = "com.bestvike.website.entity.HouseHoldSales">
		<![CDATA[
			SELECT house_use, house_hold, COUNT(1) total_num,
			sum(case when t.presell_state = '已售' then 1 else 0 end) sell_num,
			sum(case when t.presell_state = '未售' AND t.sales_flag = '是' then 1 else 0 end) nosaled_num,
			sum(case when t.sales_flag = '否' THEN 1 ELSE 0 END) nosale_num,
			replace(WM_CONCAT(DISTINCT CASE WHEN t.sales_flag = '否' THEN t.nosale_reason else '' end), ',', '/') nosale_reason
            FROM view_houseinfo t
            WHERE EXISTS(select 1 from ass_regbld WHERE region_id = #{regionId} AND project_id = t.project_id AND bld_no = t.bld_no)
        ]]>
		<if test = "houseUse != null and houseUse == '01'">
			AND t.house_use like '%住宅%'
		</if>
		<if test = "houseUse != null and houseUse == '99'">
			AND t.house_use NOT like '%住宅%'
		</if>
		<![CDATA[
            GROUP BY house_use, house_hold
            ORDER BY house_use, house_hold
		]]>
	</select>

	<select id = "selectBlds" parameterType = "String" resultType = "com.bestvike.website.entity.BldCells">
		<![CDATA[
			SELECT project_id, bld_no, CASE WHEN instr(bld_name, '#') > 0 THEN bld_name else bld_name || '#' end bld_name
			FROM view_bldInfo t WHERE EXISTS (
				SELECT 1 FROM ass_regbld WHERE region_id = #{regionId} AND project_id = t.project_id
			)
		    ORDER BY to_number(nvl(regexp_replace(t.bld_name, '[^0-9]'), -1)) asc, bld_no asc
		]]>
	</select>

	<select id = "selectBldCells" parameterType = "map" resultType = "com.bestvike.website.entity.Cell">
		<![CDATA[
			SELECT t.project_id, t.bld_name, t.bld_no, t.cell_no, t.cell_name,
				max(t.house_num) max_house_num, max(t.house_num) show_house_num,
				case when vci.x is not null and vci.x != 0 then
				 'top:' || round(vci.y * 100) || '%;left:' ||  round(vci.x * 100) || '%' else '' end AS location
			from (
				SELECT #{projectId} project_id, t1.cell_name as cell_no, t1.cell_name || '单元' as cell_name, t2.bld_name, t2.bld_no,
				count(1) over(partition BY t1.bld_no, t1.cell_name, t1.floor_no) house_num
				FROM view_houseinfo t1 left join view_bldinfo t2
				on t1.project_id = t2.project_id AND t1.bld_no = t2.bld_no
				WHERE t1.project_id = #{projectId} AND t1.bld_no = #{bldNo}
		]]>
		<if test = "cellNo != null">
			AND t1.cell_name = #{cellNo}
		</if>
		<![CDATA[
			) t LEFT JOIN view_cellInfo vci on t.project_id = vci.project_id and t.bld_no = vci.bld_no and t.cell_no = vci.cell_name
			GROUP BY t.project_id, t.cell_no, t.cell_name, t.bld_name, t.bld_no, vci.x, vci.y
			ORDER BY lpad(t.cell_name, 10, '0') asc
		]]>
	</select>

	<select id = "selectBldFloors" parameterType = "map" resultType = "com.bestvike.website.entity.Floor">
		<![CDATA[
			SELECT nvl(floor_no, '-') floor_no,
				case when instr(floor_name, '层') > 0 THEN floor_name else floor_name || '层' end as floor_name
			FROM view_houseinfo WHERE project_id = #{projectId} AND bld_no = #{bldNo}
		]]>
		<if test = "cellNo != null">
			AND cell_name = #{cellNo}
		</if>
		<![CDATA[
			GROUP BY floor_no, floor_name
			ORDER BY case when regexp_replace(floor_no,'^[-\+]?\d+(\.\d+)?$','') is not null then 9999 else to_number(floor_no) end DESC
		]]>
	</select>

	<select id = "selectFloorCells" parameterType = "map" resultType = "com.bestvike.website.entity.Cell">
		<![CDATA[
			SELECT cell_no, cell_name, max(house_num) max_house_num, max(house_num) show_house_num
			from (
				SELECT cell_name as cell_no, cell_name || '单元' as cell_name,
				count(1) over(partition BY bld_no, cell_name, floor_no) house_num
				FROM view_houseinfo WHERE project_id = #{projectId} AND bld_no = #{bldNo} AND floor_no = #{floorNo}
		]]>
		<if test = "cellNo != null">
			AND cell_name = #{cellNo}
		</if>
		<![CDATA[
			)
			GROUP BY cell_no, cell_name
			ORDER BY lpad(cell_name, 10, '0') asc
		]]>
	</select>

	<select id = "selectRegionBlds" parameterType = "String" resultType = "com.bestvike.website.entity.RegionBlds">
		<![CDATA[
			SELECT t1.region_id, t2.project_id, t2.bld_no, case when t2.x is not null then
			 'top:' || round(t2.y * 100) || '%;left:' ||  round(t2.x * 100) || '%' else '' end AS location,
			CASE WHEN instr(bld_name, '#') > 0 THEN bld_name else bld_name || '#' end bld_name
			FROM view_regionInfo t1 left join ass_regbld t2 on t1.region_id = t2.region_id
			LEFT JOIN view_bldInfo t3 on t2.project_id = t3.project_id and t2.bld_no = t3.bld_no
			WHERE t1.region_id = #{regionId}
			ORDER BY to_number(nvl(regexp_replace(t3.bld_name, '[^0-9]'), -1)) asc, t3.bld_no asc
		]]>
	</select>

	<select id = "selectRegionMonthSale" parameterType = "String" resultType = "com.bestvike.website.entity.MonthData">
		<![CDATA[
			SELECT t1.sign_month, t2.residence_num, t2.business_num, t2.mating_num FROM
			(SELECT TO_CHAR(ADD_MONTHS(TO_DATE(#{preSaleDate}, 'yyyy-MM-dd'), ROWNUM - 1),'YYYY-MM') sign_month
				FROM DUAL CONNECT BY ROWNUM <= months_between (sysdate, to_date(#{preSaleDate}, 'yyyy-mm-dd')) + 1) t1
			LEFT JOIN
			(SELECT TO_CHAR(to_date(sign_date, 'yyyy-MM-dd'), 'yyyy-MM') sign_month,
				SUM(CASE WHEN instr(house_use, '住宅') > 0 THEN 1 ELSE 0 END) residence_num,
				SUM(CASE WHEN instr(house_use, '商业') > 0 THEN 1 ELSE 0 END) business_num,
				SUM(CASE WHEN instr(house_use, '商业') = 0 AND instr(house_use, '住宅') = 0 THEN 1 ELSE 0 END) mating_num
			FROM view_houseinfo vhi
			WHERE EXISTS (SELECT 1 FROM ass_regbld WHERE project_id = vhi.project_id AND bld_no = vhi.bld_no AND region_id = #{regionId})
				GROUP BY TO_CHAR(to_date(sign_date, 'yyyy-MM-dd'), 'yyyy-MM')) t2
			ON t1.sign_month = t2.sign_month
			WHERE to_date(t2.sign_month, 'yyyy-MM') >= add_months(sysdate, -12)
			ORDER BY t1.sign_month asc
		]]>
	</select>

	<select id = "selectRegionByProjectId" parameterType = "String" resultType = "ViewRegionInfo">
		<![CDATA[
			SELECT * FROM view_regioninfo t WHERE exists(
				select 1 FROM ass_regbld where project_id = #{projectId} and region_id = t.region_id
			)
		]]>
	</select>

	<select id = "selectRegionNum" resultType = "BigDecimal">
		<![CDATA[
			SELECT count(1) FROM view_regioninfo
		]]>
	</select>

	<select id = "selectStockArea" resultType = "BigDecimal">
		<![CDATA[
			select sum(t.construct_area) from view_houseinfo t
			where exists(select 1 from ass_regbld where bld_no = t.bld_no and project_id = t.project_id)
			and t.presell_state = '未售' and t.sales_flag = '是'
		]]>
	</select>

	<select id = "selectYesterdayTradingArea" resultType = "BigDecimal">
		<![CDATA[
			SELECT sum(t.construct_area) from view_houseinfo t
			where exists(select 1 from ass_regbld where bld_no = t.bld_no and project_id = t.project_id)
			and t.sign_date = to_char(TRUNC(sysdate - 1), 'yyyy-mm-dd')
		]]>
	</select>

	<select id = "selectTodayTradingArea" resultType = "BigDecimal">
		<![CDATA[
			SELECT sum(t.construct_area) from view_houseinfo t
			where exists(select 1 from ass_regbld where bld_no = t.bld_no and project_id = t.project_id)
			and t.sign_date = to_char(TRUNC(sysdate), 'yyyy-mm-dd')
		]]>
	</select>

	<select id = "selectMonthData" resultType = "com.bestvike.website.entity.MonthData">
		<![CDATA[
			SELECT * from view_monthdata
			WHERE data_month >= TO_CHAR(add_months(sysdate, -12), 'yyyy-MM')
			ORDER BY data_month asc
		]]>
	</select>

	<select id = "selectTodayTrade" resultType="com.bestvike.website.entity.Trade">
		<![CDATA[
			SELECT t3.region_name, t1.sign_date, t1.address, t1.house_hold, t1.record_date, t1.pay_type
			FROM view_houseinfo t1 LEFT JOIN ass_regbld t2 on t1.project_id = t2.project_id and t1.bld_no = t2.bld_no
			LEFT JOIN view_regioninfo t3 ON t2.region_id = t3.region_id
			WHERE t1.sign_date = to_char(sysdate, 'yyyy-mm-dd')
		]]>
	</select>
</mapper>