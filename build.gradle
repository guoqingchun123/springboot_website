group 'com.bestvike'
version '1.0.0'

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'maven'
apply plugin: 'org.springframework.boot'
apply plugin: "io.spring.dependency-management"

sourceCompatibility = 1.8
ext {
    snippetsDir = file("$buildDir/generated-snippets")
}
configurations.all {
    //默认情况下包才上传后24小时更新一次，这个配置自动更新为10s
    //10秒钟，可自定义，如10,'minutes'10分钟，10,'hours'10小时
    resolutionStrategy.cacheChangingModulesFor 10,'seconds'
}

buildscript {
    ext {
        springBootVersion = '2.1.3.RELEASE'
        // gralde -Prelease
        if (project.hasProperty('release')) {
            releasePublish = true
        } else {
            releasePublish = false;
        }
    }
    repositories {
        mavenLocal()
        maven { url 'https://maven.bestvike.com/repository/maven-public/' }
    }
    dependencies {
        classpath "io.spring.gradle:dependency-management-plugin:1.0.6.RELEASE"
        classpath "org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}"
    }
}

repositories {
    mavenLocal()

    // maven { url 'https://maven.bestvike.com/repository/maven-snapshots/' }
    maven { url 'https://maven.bestvike.com/repository/maven-public/' }
    // maven { url 'https://maven.bestvike.com/repository/third-party/' }
    flatDir {
        dirs 'lib'
    }
}

bootJar {
    baseName = project.name
    version = project.version
    from('static') {
        into 'static'
    }
}

dependencyManagement {
    imports {
        mavenBom 'org.springframework.boot:spring-boot-starter-parent:'+springBootVersion
        // mavenBom 'org.springframework.cloud:spring-cloud-dependencies:Dalston.RELEASE'
    }
}

bootJar {
    baseName = project.name
    version = project.version
    if (!project.releasePublish) {
        classifier='SNAPSHOT'
    } else {
        classifier='exec'
    }
}
sourceSets {
    main {
        java {
            srcDir 'src/main/java'
        }
        resources {
            srcDirs 'src/main/java'
        }
    }
}
test {
    outputs.dir snippetsDir
}
dependencies {
    // spring boot
    compile("org.springframework.boot:spring-boot-starter")
    compile("org.springframework.boot:spring-boot-starter-web")
    compile("org.springframework.boot:spring-boot-starter-data-mongodb")
    compile("org.springframework.boot:spring-boot-starter-data-redis")
    compile("org.springframework.boot:spring-boot-starter-jdbc")
    compile("org.springframework.boot:spring-boot-starter-thymeleaf")

    // spring
    compile("org.springframework:spring-web")
    compile("org.springframework:spring-webmvc")
    compile("org.springframework.batch:spring-batch-core")
    compile("org.springframework:spring-context-support")

    // mybatis and db
    compile("com.oracle:ojdbc6:11g")
    compile("org.mariadb.jdbc:mariadb-java-client:2.4.1")
    compile("org.mybatis.spring.boot:mybatis-spring-boot-starter:2.0.0")
    compile("org.mybatis:mybatis:3.5.0")
    compile("tk.mybatis:mapper:4.1.5")
    compile("com.github.pagehelper:pagehelper:5.1.8")
}
[compileJava, compileTestJava]*.options*.encoding = 'UTF-8'
